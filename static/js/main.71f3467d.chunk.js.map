{"version":3,"sources":["logo.svg","images/bed.svg","infoCard/InfoCard.js","locationHeader/LocationHeader.js","googleMap/GoogleMap.js","infoCardContainer/infoCardContainer.js","App.js","reportWebVitals.js","index.js"],"names":["InfoCard","shelterName","shelterType","shelterOccupancy","shelterCapacity","onClick","str1","str2","str3","className","aria-hidden","focusable","data-prefix","data-icon","class","role","xmlns","color","width","height","viewBox","fill","d","LocationHeader","shelterAddress","link","href","target","mapStyles","GoogleMap","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","latt","this","lat","lngg","lng","google","zoom","style","initialCenter","center","position","visible","Component","GoogleApiWrapper","apiKey","Geocode","setApiKey","setLanguage","setLocationType","enableDebug","searchClient","algoliasearch","CustomSearchBox","connectSearchBox","currentRefinement","isSearchStalled","refine","noValidate","action","placeholder","type","value","onChange","event","currentTarget","InfoCardContainer","useState","items","setItems","address","setAddress","setShelterName","setLink","setLat","setLng","useEffect","a","fetch","response","json","data","fetchData","console","log","classname","InstantSearch","indexName","id","InfiniteHits","hitComponent","hit","FACILITY_NAME","SECTOR","OCCUPANCY","CAPACITY","fromAddress","then","results","geometry","location","changeLocationHeader","SHELTER_ADDRESS","URL","objectID","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71f3467d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/bed.5ccb8d92.svg\";","import \"../infoCard/InfoCard.css\";\r\nimport bed from \"../images/bed.svg\";\r\n\r\nconst InfoCard = ({\r\n  shelterName,\r\n  shelterType,\r\n  shelterOccupancy,\r\n  shelterCapacity,\r\n  onClick,\r\n}) => {\r\n  var str1 = \"#E4E3E3\";\r\n  var str2 = \"#E4E3E3\";\r\n  var str3 = \"#E4E3E3\";\r\n  if (shelterOccupancy == 1) {\r\n    str1 = \"#B4E07B\";\r\n    str2 = \"#E4E3E3\";\r\n    str3 = \"#E4E3E3\";\r\n  } else if (shelterOccupancy == 2) {\r\n    str1 = \"#FFCF52\";\r\n    str2 = \"#FFCF52\";\r\n    str3 = \"#E4E3E3\";\r\n  } else {\r\n    str1 = \"#F45959\";\r\n    str2 = \"#F45959\";\r\n    str3 = \"#F45959\";\r\n  }\r\n  return (\r\n    <div className=\"infoCard override\">\r\n      <div className=\"row justify-content-md-center\">\r\n        <div className=\"col-md-5 textGrid\">\r\n          <h1>{shelterName}</h1>\r\n          <h1 className=\"shelterType\">\r\n            <b>{shelterType}</b>\r\n          </h1>\r\n        </div>\r\n        <div className=\"col-md-5 occupancyGrid\">\r\n          <h3>Capacity: {shelterCapacity}</h3>\r\n          <h3>\r\n            Occupancy:{\" \"}\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              data-prefix=\"fas\"\r\n              data-icon=\"bed\"\r\n              class=\"svg-inline--fa fa-bed fa-w-20\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              color={str1}\r\n              width=\"34\"\r\n              height=\"34\"\r\n              viewBox=\"0 0 640 512\"\r\n            >\r\n              <path\r\n                fill={str1}\r\n                d=\"M176 256c44.11 0 80-35.89 80-80s-35.89-80-80-80-80 35.89-80 80 35.89 80 80 80zm352-128H304c-8.84 0-16 7.16-16 16v144H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v352c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48h512v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V240c0-61.86-50.14-112-112-112z\"\r\n              ></path>\r\n            </svg>\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              data-prefix=\"fas\"\r\n              data-icon=\"bed\"\r\n              class=\"svg-inline--fa fa-bed fa-w-20\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              color={str2}\r\n              width=\"34\"\r\n              height=\"34\"\r\n              viewBox=\"0 0 640 512\"\r\n            >\r\n              <path\r\n                fill={str2}\r\n                d=\"M176 256c44.11 0 80-35.89 80-80s-35.89-80-80-80-80 35.89-80 80 35.89 80 80 80zm352-128H304c-8.84 0-16 7.16-16 16v144H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v352c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48h512v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V240c0-61.86-50.14-112-112-112z\"\r\n              ></path>\r\n            </svg>\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              data-prefix=\"fas\"\r\n              data-icon=\"bed\"\r\n              class=\"svg-inline--fa fa-bed fa-w-20\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              color={str3}\r\n              width=\"34\"\r\n              height=\"34\"\r\n              viewBox=\"0 0 640 512\"\r\n            >\r\n              <path\r\n                fill={str3}\r\n                d=\"M176 256c44.11 0 80-35.89 80-80s-35.89-80-80-80-80 35.89-80 80 35.89 80 80 80zm352-128H304c-8.84 0-16 7.16-16 16v144H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v352c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48h512v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V240c0-61.86-50.14-112-112-112z\"\r\n              ></path>\r\n            </svg>\r\n          </h3>\r\n          <button class=\"submitBtn\" onClick={onClick}>\r\n            Location\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCard;\r\n","import React from \"react\";\r\nimport \"../locationHeader/LocationHeader.css\";\r\n\r\nconst LocationHeader = ({ shelterAddress, link }) => {\r\n  return (\r\n    <div className=\"locationHeader\">\r\n      <h1 className=\"addressText\">{shelterAddress}</h1>\r\n      <a  \r\n      class=\"googleMapsBtn\"\r\n      href={link}\r\n      target='_blank'\r\n      >\r\n      Open in Google Maps\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationHeader;\r\n","import React, { Component, useEffect } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\r\nimport '../googleMap/GoogleMap.css'\r\n\r\nconst mapStyles = {\r\n    width: \"643px\",\r\n    height: '500px',\r\n};\r\n\r\nexport class GoogleMap extends Component { \r\n  state = {\r\n    showingInfoWindow: false,  // Hides or shows the InfoWindow\r\n    activeMarker: {},          // Shows the active marker upon click\r\n    selectedPlace: {}          // Shows the InfoWindow to the selected place upon a marker\r\n  };\r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n\r\n    render() {\r\n    const latt = this.props.lat;\r\n    const lngg = this.props.lng;\r\n    const shelterName = this.props.shelterName\r\n    const shelterAddress = this.props.shelterAddress\r\n    var address = shelterAddress;\r\n\r\n   \r\n    return (\r\n        <div className=\"mapContainer\">\r\n        <Map\r\n        google={this.props.google}\r\n        zoom={16}\r\n        style={mapStyles}\r\n        initialCenter = {{\r\n          lat: 43.6534438,\r\n          lng:-79.3862788\r\n        }}\r\n        center={\r\n            {\r\n            lat: latt,\r\n            lng: lngg\r\n            }\r\n        }\r\n        >\r\n          <Marker position={{lat: latt, lng: lngg}} onClick={this.onMarkerClick}/>\r\n          <InfoWindow\r\n          marker={this.state.activeMarker}\r\n          visible={this.state.showingInfoWindow}\r\n          onClose={this.onClose}\r\n        >\r\n          <div>\r\n            <h4>{shelterName}</h4>\r\n          </div>\r\n        </InfoWindow>\r\n      </Map>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyCgvjTPE6Hqy9fEVo4332nys7Cpunn06oE'\r\n})(GoogleMap);","import React, { useState, useEffect } from \"react\";\r\nimport \"../infoCardContainer/infoCardContainer.css\";\r\nimport InfoCard from \"../infoCard/InfoCard\";\r\nimport LocationHeader from \"../locationHeader/LocationHeader\";\r\nimport algoliasearch from \"algoliasearch/lite\";\r\nimport Geocode from \"react-geocode\";\r\nimport {\r\n  InstantSearch,\r\n  InfiniteHits,\r\n  Pagination,\r\n  Highlight,\r\n  ClearRefinements,\r\n  RefinementList,\r\n  Configure,\r\n  connectSearchBox,\r\n} from \"react-instantsearch-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport GoogleMap from \"../googleMap/GoogleMap\";\r\n\r\nGeocode.setApiKey(\"AIzaSyCgvjTPE6Hqy9fEVo4332nys7Cpunn06oE\");\r\n\r\nGeocode.setLanguage(\"en\");\r\n\r\nGeocode.setLocationType(\"ROOFTOP\");\r\n\r\nGeocode.enableDebug();\r\n\r\nconst searchClient = algoliasearch(\r\n  \"A8LQ861XZY\",\r\n  \"0b476f98a04f33f57d6f0b459a403111\"\r\n);\r\nconst SearchBox = ({ currentRefinement, isSearchStalled, refine }) => (\r\n  <form noValidate action=\"\" role=\"search\">\r\n    <input\r\n      class=\"searchBox\"\r\n      placeholder=\"Search for a shelter...\"\r\n      type=\"search\"\r\n      value={currentRefinement}\r\n      onChange={(event) => refine(event.currentTarget.value)}\r\n    />\r\n    <button class=\"resetQuery\" onClick={() => refine(\"\")}>\r\n      Reset query\r\n    </button>\r\n    {isSearchStalled ? \"My search is stalled\" : \"\"}\r\n  </form>\r\n);\r\n\r\nconst CustomSearchBox = connectSearchBox(SearchBox);\r\n\r\nconst InfoCardContainer = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [address, setAddress] = useState(\"Please select a location\");\r\n  const [shelterName, setShelterName] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const [lat, setLat] = useState(0);\r\n  const [lng, setLng] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/comments\"\r\n      );\r\n      const data = await response.json();\r\n      setItems(data);\r\n    };\r\n    fetchData();\r\n    console.log(items);\r\n  }, []);\r\n\r\n  const changeLocationHeader = (address,shelterName, link) => {\r\n    Geocode.fromAddress(address).then((response) => {\r\n      const { lat, lng } = response.results[0].geometry.location;\r\n      setLat(lat);\r\n      setLng(lng);\r\n      setAddress(address);\r\n      setShelterName(shelterName)\r\n      setLink(link)\r\n    });\r\n    console.log(link)\r\n    console.log(lat, lng);\r\n    console.log(address);\r\n  };\r\n\r\n  function Hit(props) {\r\n    return (\r\n      <div className=\"infoCardContainer\" id=\"like-scroll\">\r\n        <InfoCard\r\n          key={props.hit.objectID}\r\n          shelterName={props.hit.FACILITY_NAME}\r\n          shelterType={props.hit.SECTOR}\r\n          shelterOccupancy={props.hit.OCCUPANCY}\r\n          shelterCapacity={props.hit.CAPACITY}\r\n          onClick={() => changeLocationHeader(props.hit.SHELTER_ADDRESS, props.hit.FACILITY_NAME, props.hit.URL)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  Hit.propTypes = {\r\n    hit: PropTypes.object.isRequired,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div classname=\"col-md-6\">\r\n          <div className=\"ais-InstantSearch\">\r\n            <InstantSearch indexName=\"demo_geo_3\" searchClient={searchClient}>\r\n              <div className=\"right-panel\">\r\n                <CustomSearchBox />\r\n                <div className=\"infoCardContainer\" id=\"like-scroll\">\r\n                  <InfiniteHits hitComponent={Hit} />\r\n                </div>\r\n              </div>\r\n            </InstantSearch>\r\n          </div>\r\n        </div>\r\n        <div classname=\"col-md-6\">\r\n          <LocationHeader shelterAddress={address} link={link} />\r\n          <GoogleMap shelterAddress={address} lat={lat} lng={lng} shelterName={shelterName} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCardContainer;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport InfoCardContainer from \"./infoCardContainer/infoCardContainer\";\r\nimport LocationHeader from \"./locationHeader/LocationHeader\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"Header\">ShelterTO</h1>\r\n      <h3 className=\"emergencyDisclaimer\">\r\n        In an emergency, dial 911 immediately.\r\n      </h3>\r\n      <InfoCardContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}